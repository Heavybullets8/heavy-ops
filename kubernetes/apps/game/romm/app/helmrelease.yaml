---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app romm
spec:
  interval: 15m
  chart:
    spec:
      interval: 15m
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3

  values:
    controllers:
      romm:
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: romm-secret

        containers:
          app:
            image:
              repository: ghcr.io/rommapp/romm
              tag: 3.7.3
            probes:
              liveness: &probes
                enabled: true
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            env:
              # General
              TZ: ${TIMEZONE}
              # Database
              ROMM_DB_DRIVER: "postgresql"
              # Redis
              REDIS_HOST: dragonfly.database.svc.cluster.local
              REDIS_DB: 3
            envFrom: *envFrom
            resources:
              requests:
                cpu: 10m
                memory: 10M
              limits:
                memory: 10Gi

    service:
      app:
        controller: *app
        ports:
          http:
            port: 8080

    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: "https://auth.${SECRET_DOMAIN}/api/verify"
          nginx.ingress.kubernetes.io/auth-signin: "https://auth.${SECRET_DOMAIN}/?rm=$request_method"
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
        hosts:
          - host: "romm.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      romm:
        existingClaim: *app
