---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app nzbget
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: openebs
      namespace: openebs-system
    - name: volsync
      namespace: volsync-system

  values:
    controllers:
      nzbget:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/heavybullets8/nzbget
              tag: v24.4@sha256:3527bc39cf5c9a4a5a1f89df167f0efb39dac1f2d3ba6e03cdaf1df231dcbd59
            env:
              TZ: ${TIMEZONE}
              PUID: 568
              PGID: 568
            probes:
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
              liveness: &probes
                enabled: true
                spec:
                  initialDelaySeconds: 0
                  timeoutSeconds: 10
                  periodSeconds: 30
                  failureThreshold: 5
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                memory: 500Mi
                cpu: 100m
              limits:
                memory: 140Gi

    defaultPodOptions:
      terminationGracePeriodSeconds: 600
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }

    service:
      app:
        controller: *app
        ports:
          http:
            port: 6789

    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: "https://auth.${SECRET_DOMAIN}/api/verify"
          nginx.ingress.kubernetes.io/auth-signin: "https://auth.${SECRET_DOMAIN}/?rm=$request_method"
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
        className: external
        hosts:
          - host: nzbget.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      config:
        existingClaim: *app

      temporary:
        type: emptyDir
        medium: Memory
        globalMounts:
          - path: /config/logs
            subPath: config/logs
          - path: /tmp
            subPath: tmp
          - path: /incomplete
            subPath: incomplete

      media:
        type: nfs
        server: ${TRUENAS_IP}
        path: /mnt/tank/media/download/nzbget
        globalMounts:
          - path: /media/download/usenet

      scripts:
        type: configMap
        name: nzbget-configmap
        defaultMode: 0555
        globalMounts:
          - path: /config/scripts/replace_for.py
            subPath: replace_for.py
            readOnly: true
          - path: /config/scripts/clean.py
            subPath: clean.py
            readOnly: true
          - path: /config/scripts/hash_renamer.py
            subPath: hash_renamer.py
            readOnly: true