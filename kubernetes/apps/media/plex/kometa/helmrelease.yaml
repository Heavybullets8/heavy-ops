---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app kometa
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  install:
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: plex
      namespace: media
  values:
    controllers:
      anime-series:
        type: &type cronjob
        cronjob: &cronjob
          schedule: "0 16,5 * * *"
          timeZone: &timeZone ${TIMEZONE}
          concurrencyPolicy: Forbid
          successfulJobsHistory: 1
          failedJobsHistory: 1
        containers:
          app: &container_app
            image:
              repository: kometateam/kometa
              tag: develop@sha256:0dd590a5735e3f6b371d0e0c4c64aa0acf9591991802ca947890ce0f8bb62592
            command:
              - /bin/sh
              - -c
            args:
              - |
                python3 kometa.py --run --read-only-config --run-libraries "Anime Series"
            env:
              TZ: *timeZone
              KOMETA_CONFIG: /config/config.yaml
            envFrom:
              - secretRef:
                  name: kometa-secret
            resources:
              requests:
                cpu: 10m
                memory: 10M
              limits:
                memory: 5120M
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            lifecycle:
              postStart:
                exec:
                  command: ["/bin/bash", "-c", "mkdir -p /config/assets/{anime,awards,decades,genres,holidays,networks,suggestions,posters}"]

      anime-movies:
        type: *type
        cronjob:
          <<: *cronjob
          schedule: "5 16,5 * * *"
        containers:
          app:
            <<: *container_app
            args:
              - |
                python3 kometa.py --run --read-only-config --run-libraries "Anime Movies"

      standard-series:
        type: *type
        cronjob:
          <<: *cronjob
          schedule: "10 5,16 * * *"
        containers:
          app:
            <<: *container_app
            args:
              - |
                python3 kometa.py --run --read-only-config --run-libraries "Series"

      standard-movies:
        type: *type
        cronjob:
          <<: *cronjob
          schedule: "20 5,16 * * *"
        containers:
          app:
            <<: *container_app
            args:
              - |
                python3 kometa.py --run --read-only-config --run-libraries "Movies"

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: Always

    persistence:
      assets:
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 75Gi
        storageClass: openebs-zfs
        globalMounts:
          - path: /config/assets

      config:
        existingClaim: *app

      config-file:
        type: configMap
        name: kometa-configmap
        globalMounts:
          - path: /config/config.yaml
            subPath: config.yaml
            readOnly: true

      logs:
        type: emptyDir
        globalMounts:
          - path: /config/logs

      custom-configs:
        type: configMap
        name: kometa-custom-configs
        globalMounts:
          - path: /config/Anime_Collections_All.yaml
            subPath: Anime_Collections_All.yaml
            readOnly: true
          - path: /config/Movies_Collections_Awards.yaml
            subPath: Movies_Collections_Awards.yaml
            readOnly: true
          - path: /config/Movies_Collections_Decades.yaml
            subPath: Movies_Collections_Decades.yaml
            readOnly: true
          - path: /config/Movies_Collections_Genres.yaml
            subPath: Movies_Collections_Genres.yaml
            readOnly: true
          - path: /config/Movies_Collections_Holidays.yaml
            subPath: Movies_Collections_Holidays.yaml
            readOnly: true
          - path: /config/Movies_Collections_Suggestions.yaml
            subPath: Movies_Collections_Suggestions.yaml
            readOnly: true
          - path: /config/Series_Collections_Networks.yaml
            subPath: Series_Collections_Networks.yaml
            readOnly: true
          - path: /config/Series_Collections_Suggestions.yaml
            subPath: Series_Collections_Suggestions.yaml
            readOnly: true
