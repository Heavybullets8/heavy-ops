---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: cross-seed
spec:
  refreshInterval: 5m
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  target:
    name: cross-seed-secret
    template:
      engineVersion: v2
      data:
        # TODO: remove datadirs after a single run
        # maxDataDepth: 2,
        # dataDirs: [
        #   "/media/library/series",
        #   "/media/library/movies"
        # ],
        config.js: |
          module.exports = {
            maxDataDepth: 4,
            dataDirs: [
              "/media/library/series",
              "/media/library/movies"
            ],
            action: "inject",
            apiKey: "{{.CROSS_SEED_API_KEY}}",
            delay: 30,
            duplicateCategories: false,
            excludeRecentSearch: "6 weeks",
            excludeOlder: "12 weeks",
            flatLinking: false,
            includeNonVideos: true,
            includeSingleEpisodes: true,
            linkCategory: "cross-seed",
            linkDir: "/media/download/torrent/categories/cross-seed",
            linkType: "hardlink",
            matchMode: "partial",
            outputDir: "/config",
            port: 80,
            qbittorrentUrl: "http://qbittorrent.media.svc.cluster.local",
            radarr: ["http://radarr.media.svc.cluster.local/?apikey={{ .RADARR_API_KEY }}"],
            sonarr: ["http://sonarr.media.svc.cluster.local/?apikey={{ .SONARR_API_KEY }}"],
            searchCadence: "2 weeks",
            torrentDir: "/qbittorrent/qBittorrent/BT_backup",
            torznab: [
              19,
              31,
              28,
            ].map(i => `http://prowlarr.media.svc.cluster.local/$${i}/api?apikey={{ .PROWLARR_API_KEY }}`),
          };
  dataFrom:
    - extract:
        key: cross-seed
      rewrite:
        - regexp:
            source: "(.*)"
            target: "CROSS_SEED_$1"

    - extract:
        key: radarr
      rewrite:
        - regexp:
            source: "(.*)"
            target: "RADARR_$1"

    - extract:
        key: sonarr
      rewrite:
        - regexp:
            source: "(.*)"
            target: "SONARR_$1"

    - extract:
        key: prowlarr
      rewrite:
        - regexp:
            source: "(.*)"
            target: "PROWLARR_$1"
