---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: cross-seed
spec:
  refreshInterval: 5m
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  target:
    name: cross-seed-secret
    template:
      engineVersion: v2
      data:
        config.js: |
          module.exports = {
            // ======== BASIC SETTINGS =========
            action: "inject",
            apiKey: "{{.CROSS_SEED_API_KEY}}",
            delay: 30,
            duplicateCategories: false,
            flatLinking: false,
            includeNonVideos: true,
            rssCadence: "10 minutes",
            includeSingleEpisodes: true,

            // ======== Container =========
            port: 80,
            outputDir: "/config",

            // ======== ID SEARCHING =========
            sonarr: ["http://sonarr.media.svc.cluster.local/?apikey={{ .SONARR_API_KEY }}"],
            radarr: ["http://radarr.media.svc.cluster.local/?apikey={{ .RADARR_API_KEY }}"],

            // ======== PARTIAL MATCHING (Requires Linking) =========
            matchMode: "partial",
            linkCategory: "cross-seed",
            linkDir: "/media/download/torrent/categories/cross-seed",
            linkType: "hardlink",

            // ======== DATA BASED MATCHING (Requires Partial Matching) =========
            // Commented out, since you only need to ever run it once
            // After it successfully runs, uncomment it.
            // maxDataDepth: 4,
            // dataDirs: [
            //    "/media/library/series",
            //    "/media/library/movies"
            // ],
            // excludeRecentSearch: "6 weeks",
            // excludeOlder: "12 weeks",
            // searchCadence: "2 weeks",


            // ======== PROWLARR =========
            torznab: [
              19,
              28,
              31,
            ].map(i => `http://prowlarr.media.svc.cluster.local/$${i}/api?apikey={{ .PROWLARR_API_KEY }}`),

            // ======== TORRENT CLIENT =========
            qbittorrentUrl: "http://qbittorrent.media.svc.cluster.local",
            torrentDir: "/qbittorrent/qBittorrent/BT_backup",

            // ======== NOTIFICATIONS =========
            notificationWebhookUrl: "{{ .NOTIFIARR_CROSS_SEED_WEBHOOK_URL }}",
          };
  dataFrom:
    - extract:
        key: cross-seed
      rewrite:
        - regexp:
            source: "(.*)"
            target: "CROSS_SEED_$1"

    - extract:
        key: radarr
      rewrite:
        - regexp:
            source: "(.*)"
            target: "RADARR_$1"

    - extract:
        key: sonarr
      rewrite:
        - regexp:
            source: "(.*)"
            target: "SONARR_$1"

    - extract:
        key: prowlarr
      rewrite:
        - regexp:
            source: "(.*)"
            target: "PROWLARR_$1"

    - extract:
        key: notifiarr
      rewrite:
        - regexp:
            source: "(.*)"
            target: "NOTIFIARR_$1"
