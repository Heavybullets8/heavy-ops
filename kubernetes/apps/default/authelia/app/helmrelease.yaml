---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app authelia
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: glauth
      namespace: default

  values:
    controllers:
      authelia:
        replicas: 1
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: ghcr.io/authelia/authelia
              tag: 4.38.18@sha256:a5e6fa4b1dbdc296f80f9175157b145a0598690ec8cd4d6e105cd4498fe0c731
            env:
              AUTHELIA_SERVER_ADDRESS: tcp://0.0.0.0:80
              AUTHELIA_SERVER_DISABLE_HEALTHCHECK: "true"
              AUTHELIA_TELEMETRY_METRICS_ADDRESS: tcp://0.0.0.0:8080
              AUTHELIA_TELEMETRY_METRICS_ENABLED: "true"
              AUTHELIA_THEME: dark
              X_AUTHELIA_CONFIG: /config/configuration.yaml
            envFrom:
              - secretRef:
                  name: authelia-db-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/health
                    port: &port 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 500Mi

    defaultPodOptions:
      enableServiceLinks: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        seccompProfile: { type: RuntimeDefault }

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
          metrics:
            port: 8080

    serviceMonitor:
      app:
        serviceName: *app
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s

    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          nginx.org/proxy-set-headers: >
            X-Frame-Options: SAMEORIGIN,
            X-XSS-Protection: 1; mode=block,
            Cache-Control: no-store,
            Pragma: no-cache
        className: external
        hosts:
          - host: "auth.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      config:
        type: secret
        name: authelia-secret
        globalMounts:
          - path: /config/configuration.yaml
            subPath: configuration.yaml
            readOnly: true
