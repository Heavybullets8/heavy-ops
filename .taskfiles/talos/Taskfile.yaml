---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

tasks:
  apply-node:
    desc: Apply Talos config to the node
    cmd: minijinja-cli {{.TALOS_DIR}}/{{.NODE_IP}}.yaml.j2 | op inject | talosctl --nodes {{.NODE_IP}} apply-config --mode {{.MODE}} --file /dev/stdin
    vars:
      MODE: '{{.MODE | default "auto"}}'
      NODE_IP: '192.168.200.15'
      TALOS_MACHINE_TYPE:
        sh: talosctl --nodes {{.NODE_IP}} get machinetypes --output jsonpath='{.spec}'
    preconditions:
      - talosctl --nodes {{.NODE_IP}} get machineconfig
      - test -f {{.ROOT_DIR}}/.talos.env
      - test -f {{.TALOS_DIR}}/{{.NODE_IP}}.yaml.j2
      - test -f {{.ROOT_DIR}}/talosconfig
      - which minijinja-cli op talosctl

  upgrade-node:
    desc: Upgrade Talos on the node
    cmd: talosctl --nodes {{.NODE_IP}} upgrade --image="{{.TALOS_IMAGE}}" --timeout=10m
    vars:
      NODE_IP: '192.168.200.15'
      TALOS_MACHINE_TYPE:
        sh: talosctl --nodes {{.NODE_IP}} get machinetypes --output jsonpath='{.spec}'
      TALOS_IMAGE:
        sh: minijinja-cli {{.TALOS_DIR}}/{{.NODE_IP}}.yaml.j2 | yq '.machine.install.image' -
    preconditions:
      - talosctl --nodes {{.NODE_IP}} get machineconfig
      - test -f {{.ROOT_DIR}}/.talos.env
      - test -f {{.TALOS_DIR}}/{{.NODE_IP}}.yaml.j2
      - test -f {{.ROOT_DIR}}/talosconfig
      - which minijinja-cli talosctl yq

  upgrade-k8s:
    desc: Upgrade Kubernetes on the node
    cmd: talosctl --nodes {{.NODE_IP}} upgrade-k8s --to $KUBERNETES_VERSION
    vars:
      NODE_IP: '192.168.200.15'
    preconditions:
      - talosctl --nodes {{.NODE_IP}} get machineconfig
      - test -f {{.ROOT_DIR}}/.talos.env
      - test -f {{.ROOT_DIR}}/talosconfig
      - which talosctl

  reboot-node:
    desc: Reboot Talos node
    cmd: talosctl --nodes {{.NODE_IP}} reboot --mode={{.MODE}}
    vars:
      NODE_IP: '192.168.200.15'
      MODE: '{{.MODE | default "default"}}'
    preconditions:
      - talosctl --nodes {{.NODE_IP}} get machineconfig
      - test -f {{.ROOT_DIR}}/.talos.env
      - test -f {{.ROOT_DIR}}/talosconfig
      - which talosctl

  reset-node:
    desc: Reset Talos node
    prompt: Reset Talos node ... continue?
    cmd: talosctl reset --nodes {{.NODE_IP}} --graceful=false
    vars:
      NODE_IP: '192.168.200.15'
    preconditions:
      - talosctl --nodes {{.NODE_IP}} get machineconfig
      - test -f {{.ROOT_DIR}}/talosconfig
      - which talosctl

  kubeconfig:
    desc: Generate the kubeconfig
    cmd: talosctl kubeconfig --nodes {{.NODE_IP}} --force --force-context-name main {{.ROOT_DIR}}
    vars:
      NODE_IP: '192.168.200.15'
    preconditions:
      - test -f {{.ROOT_DIR}}/talosconfig
      - which talosctl
