---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

tasks:

  apply:
    desc: Apply Talos config to the node [MODE=auto]
    vars:
      MODE: '{{.MODE | default "auto"}}'
      CONFIG_FILE: '{{.TALOS_DIR}}/{{.NODE_IP}}.yaml.j2'
    cmd: |
      minijinja-cli {{.CONFIG_FILE}} | op inject | talosctl --nodes {{.NODE_IP}} apply-config --mode {{.MODE}} --file /dev/stdin
    preconditions:
      - talosctl --nodes {{.NODE_IP}} get machineconfig
      - test -f {{.CONFIG_FILE}}
      - which minijinja-cli op talosctl

  upgrade:
    desc: Upgrade Talos on the node [MODE=powercycle]
    vars:
      MODE: '{{.MODE | default "powercycle"}}'
      FACTORY_IMAGE:
        sh: minijinja-cli {{.TALOS_DIR}}/{{.NODE_IP}}.yaml.j2 | yq --exit-status '.machine.install.image'
    cmd: talosctl --nodes {{.NODE_IP}} upgrade --image="{{.FACTORY_IMAGE}}" --reboot-mode={{.MODE}} --timeout=10m
    preconditions:
      - talosctl --nodes {{.NODE_IP}} get machineconfig
      - test -f {{.TALOS_DIR}}/nodes/{{.NODE_IP}}.yaml.j2
      - which minijinja-cli talosctl yq

  upgrade-k8s:
    desc: Upgrade Kubernetes on the node
    cmd: talosctl --nodes {{.NODE_IP}} upgrade-k8s --to $KUBERNETES_VERSION
    preconditions:
      - talosctl --nodes {{.NODE_IP}} get machineconfig
      - which talosctl

  reboot:
    desc: Reboot Talos on the node [MODE=powercycle]
    vars:
      MODE: '{{.MODE | default "powercycle"}}'
    cmd: talosctl --nodes {{.NODE_IP}} reboot --mode={{.MODE}}
    preconditions:
      - talosctl --nodes {{.NODE_IP}} get machineconfig
      - which talosctl

  shutdown:
    desc: Shutdown the Talos node
    prompt: Shutdown the Talos node ... continue?
    cmd: talosctl shutdown --nodes {{.NODE_IP}} --force
    preconditions:
      - talosctl --nodes {{.NODE_IP}} get machineconfig
      - which talosctl

  reset:
    desc: Reset Talos on the node
    prompt: Reset Talos node '{{.NODE_IP}}' ... continue?
    cmd: talosctl reset --nodes {{.NODE_IP}} --graceful=false
    preconditions:
      - talosctl --nodes {{.NODE_IP}} get machineconfig
      - which talosctl

  kubeconfig:
    desc: Generate the kubeconfig for the Talos node
    cmd: talosctl kubeconfig --nodes {{.NODE_IP}} --force --force-context-name main {{.ROOT_DIR}}
    preconditions:
      - talosctl --nodes {{.NODE_IP}} get machineconfig
      - which talosctl
